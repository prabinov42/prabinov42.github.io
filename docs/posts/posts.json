[
  {
    "path": "posts/why_not_r/",
    "title": "Why Not R",
    "description": "Why not use R for all courses in Commerce (BComm and MBA)?",
    "author": [],
    "date": "2022-10-16",
    "categories": [],
    "contents": "\nIt is my belief that a business student’s academic journey can be\nenriched by using one computational system for the entire program,\nwhether it be for an undergrad or grad program. Here I make the case for\nthat system being R.\nLet\nme convince you!\n\n\n\n",
    "preview": {},
    "last_modified": "2022-11-13T09:41:49-05:00",
    "input_file": {}
  },
  {
    "path": "posts/mma_in_ds/",
    "title": "Probabilistic Modeling with Mathematica",
    "description": "Using Mathematica to do some cool data science things",
    "author": [],
    "date": "2022-10-16",
    "categories": [],
    "contents": "\nIntroduction\nPython, R and SQL are the most commonly used tools by data\nscientists. But there is another tool that can be incredibly useful on\noccasion: Mathematica.\nMathematica has since added all sorts of data\nscience features, but what I show here is just some of the cool\nthing you can do with probabilistic modeling.\nThe following is a minor update of a blog I did many years ago - I’m\nmoving it here from Wordpress, and taking the opportunity to add a bit\nmore info.\nIt was originally about trying to calculate the probability of a\ncomplicated system failing, involving many components each with their\nown probabilities, parameters, etc. At the time (it was a real project\nat work, here sufficiently generalized so as to anonymize it) I did not\nreally believe that Mathematica could help. I planned to simulate it,\nbut figured I’d give it a shot for fun.\nHere we go….\nProbability Modeling with\nMathematica\nAt some point, I will write a post about the utility of modeling in\ndata science: how the act of creating a realistic model of the process\nthat generates the data can alert you to wonky data, to which features\nof your data really matter for the problem at hand, and how the model\ncan be used in Bayesian analysis.\nBut in this post, I want only to demonstrate how easy it is to create\nmodels in Mathematica that would be ridiculously difficult, time\nconsuming, and error prone to do by hand.\nThis model is an abstraction of a real problem I worked on, and the\nnames and parameters have been changed to protect the innocent.\nNotation conventions in this example:\nany variable that ends with a D is a distribution. Not a\nsample from a distribution, or a mean of the distribution, but the\ndistribution itself.\nany variable that ends in an X is a random\nvariable\nthe symbol ≈ indicates distributed as. So,\nfX≈fD means that the random variable fX has\ndistribution fD. If you are trying to reproduce this yourself,\nsometimes copying this symbol from the web gets wonky - enter it by\nhitting the escape key, then typing dist, then hitting the\nescape key again\nanything that ends in an R is a result calculated\nearlier\nIf you are going to do this kind of modeling, it helps to have such\nconventions so that it is obvious to you what is a distribution, what is\na random variable, what is a number, etc.\nTo the code/model!\naD = ExponentialDistribution[1/10]\nThis line defines aD to be an exponential distribution with\nparameter 1/10. No surprise there!\nbD = ParameterMixtureDistribution[PoissonDistribution[aX/3], aX ≈ aD];\nThis line defines bD to be a Poisson distribution, where the\nparameter of the distribution is another random variable, aX/3,\nwhere aX has distribution aD (exponential, as defined\nabove). So, we are building a hierarchical model here.\ncR = Probability[bX >= 1, bX ≈ bD];\nHere we calculate the probability that a bD distributed\nrandom variable is greater than or equal to 1.\ndD = BinomialDistribution[99, cR];\nAnd this line defines dD to be a binomial distribution with\nparameters 99 and cR, which we calculated above.\neD = TransformedDistribution[100*Binomial[dX, 2]/Binomial[100, 2], dX ≈ dD];\neD is the distribution of a more complicated random\nvariable: dX is distributed according to dD, then we\napply a somewhat complicated function to it. eD is its\ndistribution.\nfD = TransformedDistribution[ eX*aX, {eX ≈ eD, aX ≈ aD}];\nHere fD is the distribution of the product of two (assumed\nindependent) random variables, eX and aX, distributed\naccording to eD and aD respectively.\ngD = TransformedDistribution[2^10/(1 + dX), dX ≈ dD];\nThis line defines gD to be the distribution of a constant\ndivided by 1+dX, where dX is a dD distributed\nrandom variable.\nhR = Probability[fX > 100, fX ≈ fD];\nhR is the probability that an fD distributed random\nvariable is greater than a large constant.\niD = ParameterMixtureDistribution[BinomialDistribution[Round[gX], hR], gX ≈ gD];\nThis line defines iD to be a binomial distribution, with the\nsecond parameter being hR as calculated above. To get the first\nparameter, we have a gD distributed random variable, and then\nwe round it to the nearest integer.\nNow that we have our final distribution, we can treat it pretty much\nas any build in distribution. I say pretty much because, for example,\nMathematica does not know how to determine its quantiles, etc.\nBut we can do this:\nMean[iD]\nand if I do I will get about 12,500 characters of output, the exact\nvalue. But if I do\nMean[iD]//N\nI get 11.2276.\nOr I can do this:\nPlot[CDF[iD, x], {x, 0, 50}]\n\nor many other things.\nThis is very cool for a dozen lines of code.\nIf you want some real tedious pain, try to do this by hand, and let\nme know if you succeed!\nWhat functions do these\nfunctions do?\nMost of them are obvious from the name of the function (and there are\nmany more - including calculating conditional probabilities and\nexpectations!), but I was initially confused about what these two\ndo:\nParameterMixtureDistribution calculates the distribution\nof a random variables where one or more of the parameters of the\ndistributions are from other distributions.\nTransformedDistribution calculates the distribution of\nrandom variables that are functions of other random variables.\nLast words\nTo me, it is astounding that Mathematica can calculate\nthis…calculate, not estimate or simulate, but do all the\nmanipulations that you would do on paper if you had the time and never\nmade an error.\nYou can do some of these kind of manipulations on WolframAlpha for free, but\nperhaps not all, and your computation time will be limited.\nAlternatively, you can download the WolframEngine and\nmake it work with Jupyter (I did that several years ago - don’t remember\nhow, but it wasn’t a big deal).\nBonus Material\nThe Mathematics symbol for conditional probability is, well, a weird\nthing you enter by hitting the escape key, then cond, then the\nescape key again. Alternatively, you can use the full input form, as we\ndo here because the symbol did not come across cleanly.\nExample 1\naD = ExponentialDistribution[m];\nProbability[Conditioned[x > a + b, x > a], Distributed[x, aD], Assumptions -> a > 0 && b > 0]\nwhich yields\nE^((-b)*m)\nand\nProbability[x > b, Distributed[x, aD], Assumptions -> b > 0]\nwhich also yields\nE^((-b)*m)\nwhich is a well known property of the exponential distribution.\nExample 2\nAnother example:\nTransformedDistribution[ x + y, {Distributed[x, PoissonDistribution[m1]], Distributed[y, PoissonDistribution[m2]]}]\nyields\nPoissonDistribution[m1 + m2]\nalso\nn=13;\nTransformedDistribution[Total[Array[x, n]], Array[Distributed[x[#], PoissonDistribution[a]] &, n]]\nyields\nPoissonDistribution[13*a]\nExample 3\nOne final example (thanks to https://mathematica.stackexchange.com/)\nn = 13; \nTransformedDistribution[Min[Array[x, n]], Table[Distributed[x[i], ExponentialDistribution[m]], {i, n}]]\ngives\nExponentialDistribution[13*m]\nAppendices\n\nInfo\nI’m using Mathematica Home Edition, v13.1 on a Mac OS 12.6.\n\n\n\n",
    "preview": "posts/mma_in_ds/mma_blog_plot.png",
    "last_modified": "2022-11-19T13:40:45-05:00",
    "input_file": "mma_blog.knit.md"
  },
  {
    "path": "posts/ordinal_regression/",
    "title": "Ordinal Regression",
    "description": "An Introduction to Ordinal Regression",
    "author": [],
    "date": "2022-04-30",
    "categories": [],
    "contents": "\nThe purpose of this project is to show how to do an ordinal\nregression in R.\nGet\nstarted!\n\n\n\n",
    "preview": {},
    "last_modified": "2022-11-13T09:41:24-05:00",
    "input_file": {}
  },
  {
    "path": "posts/betareg/",
    "title": "Beta Regression",
    "description": "An Introduction to Beta Regression",
    "author": [],
    "date": "2022-04-17",
    "categories": [],
    "contents": "\nThe purpose of this project is to show how to do a beta regression in\nR using the awesome betareg package.\nGet\nstarted!\n\n\n\n",
    "preview": {},
    "last_modified": "2022-11-13T09:41:03-05:00",
    "input_file": {}
  },
  {
    "path": "posts/greta_and_causact/",
    "title": "Greta and Causact",
    "description": "Bayesian Models with Greta and Causact",
    "author": [],
    "date": "2021-12-26",
    "categories": [],
    "contents": "\nThe purpose of this project is to illustrate how to use the causact library to build some simple\nmodels. Causact allows you to create Bayesian models, and uses the greta library to do the\ncomputations. Well, not really - greta just sets them up, and uses\nTensorFlow underneath.\nThe cool thing is with causact you can describe your model as a\ngraph, like this: \nand it automatically generates the greta code which you can run to\nget estimates of everything.\nGet\nstarted!\nMore stuff to come soon about:\n- multilevel models\n- priors\n- posterior predictive distributions.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-11-13T09:41:15-05:00",
    "input_file": {}
  },
  {
    "path": "posts/ponies/",
    "title": "Ponies",
    "description": "Data science and horse racing",
    "author": [],
    "date": "2021-12-26",
    "categories": [],
    "contents": "\nA million years ago I did a series of posts about data science and\nhorse racing.\nI cleaned it up a bit and migrated it from Wordpress to here.\nYou can still see the old version\nfor a while.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-11-13T09:41:36-05:00",
    "input_file": {}
  }
]
